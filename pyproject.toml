[project]
name = "b-asic"
description = "Better ASIC Toolbox"
readme = "README.md"
authors = [
  { name = "Oscar Gustafsson", email = "oscar.gustafsson@liu.se" },
  { name = "Mikael Henriksson", email = "mikael.henriksson@liu.se" },
  { name = "Frans Skarman", email = "frans.skarman@liu.se" },
  { name = "Petter Källström", email = "petter.kallstrom@liu.se" },
  { name = "Olle Hansson", email = "olle.hansson@liu.se" },
  { name = "Adam Jakobsson" },
  { name = "Andreas Bolin" },
  { name = "Angus Lothian" },
  { name = "Arvid Westerlund" },
  { name = "Felix Goding" },
  { name = "Ivar Härnqvist" },
  { name = "Jacob Wahlman" },
  { name = "Kevin Scott" },
  { name = "Rasmus Karlsson" },
  { name = "Simon Bjurek" },
]
maintainers = [{ name = "Oscar Gustafsson", email = "oscar.gustafsson@liu.se" }]
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.10"
dependencies = [
  "numpy",
  "qtpy",
  "graphviz>=0.19",
  "matplotlib>=3.7",
  "networkx>=3",
  "pulp",
  "qtawesome",
  "natsort",
]
classifiers = [
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: C++",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
  "Development Status :: 3 - Alpha",
]
dynamic = ["version"]

[project.optional-dependencies]
pyqt6 = ["pyqt6"]
pyside6 = ["pyside6"]
test = [
  "pytest",
  "pytest-cov",
  "pytest-qt",
  "pytest-timeout",
  "pytest-xvfb",
  "pytest-xdist",
  "scipy",
  "cocotb>=2.0.0b1",
]
doc = [
  "sphinx",
  "furo",
  "numpydoc",
  "sphinx-gallery",
  "mplsignal",
  "sphinx-copybutton",
]

[project.urls]
homepage = "https://gitlab.liu.se/da/B-ASIC"
documentation = "https://da.gitlab-pages.liu.se/B-ASIC/"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
where = ["lib"]

[build-system]
requires = ["setuptools>=80", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "lib/b_asic/_version.py"
version_scheme = "release-branch-semver"
local_scheme = "node-and-date"
fallback_version = "0.0+UNKNOWN"

[tool.mypy]
packages = ["b_asic", "test"]
no_site_packages = true
ignore_missing_imports = true

[tool.coverage.report]
precision = 2

[tool.ruff]
exclude = [
  "examples",
  "docs_sphinx",
  "lib/b_asic/scheduler_gui/ui_main_window.py"
]

[tool.ruff.lint]
select = [
  "A",
  "B",
  "C4",
  "D",
  "E",
  "F",
  "FURB",
  "G",
  "I",
  "NPY",
  "PERF",
  "PIE",
  "PL",
  "PT",
  "PTH",
  "RET",
  "RUF",
  "SIM",
  "SLOT",
  "UP",
]
ignore = [
  "B008",
  "B021", # f-string as doc-string
  "D101", # Missing doc-string in public class
  "D102", # Missing doc-string in public method
  "D103", # Missing doc-string in public function
  "D105", # Missing doc-string in magic method
  "D107", # Missing doc-string in __init__
  "D200", # Single line doc-string on single line
  "D203", # One empty line before class docstring
  "D205", # Blank line between summary and description/multi-line summary
  "D212", # Start doc-string on first line
  "D413", # End last section with empty line
  "D418", # overload should not have doc-string: FIXME
  "E501", # Line too long, formatter will deal with possible fixes
  "E741", # Ambiguous variable name: FIXME
  "PLR0911", # Too many return statements
  "PLR0912", # Too many branches
  "PLR0913", # Too many arguments in function definition
  "PLR0915", # Too many statements
  "PLR2004", # Compare to constants
  "PLR5501", # Use `elif` instead of `else` then `if`: good for readability
  "PLW2901", # Overwrite loop variable: would be good to activate
  "RET505", # else after return: good for readability
  "UP038", # isinstance form (deprecated)

]

[tool.ruff.lint.per-file-ignores]
"test/*" = ["D1", "D401", "PERF401", "E501", "ANN"]
"lib/b_asic/scheduler_gui/ui_main_window.py" = ["D100"]
"lib/b_asic/scheduler_gui/compile.py" = ["PTH118", "PTH122"]
"lib/b_asic/__init__.py" = ["F403"]
"test/conftest.py" = ["F403"]

[tool.ruff.lint.isort]
known-first-party = ["b_asic"]

[tool.codespell]
ignore-words-list = ["inout"]
