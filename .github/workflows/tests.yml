#
# This workflow will install Python dependencies and run the B-ASIC test suite.
#
# For more information see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
#

name: Unit tests
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

permissions:
  contents: read

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13", "3.13t", "3.14", "3.14t"]
        os: [
            ubuntu-latest,
            ubuntu-24.04-arm,
            macos-14,
            macos-15,
            windows-latest,
          ] # windows-11-arm,
        qt-version: ["pyqt6", "pyside6"]
        exclude:
          - python-version: "3.13"
            qt-version: "pyside6"
          - python-version: "3.13t"
          - python-version: "3.14"
            qt-version: "pyside6"
          - python-version: "3.14t"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          fetch-tags: true
          persist-credentials: false
      - uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1.13.0  # Active MSVC environment on Windows virtual env
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Install Linux dependencies
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update -yy
          sudo apt-get install -yy graphviz python3-pyqt6 xvfb xdg-utils libxcb-cursor-dev cmake
      - name: Install macOS dependencies
        if: contains(matrix.os, 'macos')
        run: |
          brew update
          brew install graphviz cmake
      - name: Install B-ASIC
        run: |
          git fetch --tags
          python -m pip install .[test,${{ matrix.qt-version }}] -v
      - name: Set environment variables for QT
        if: contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')
        run: |
          export QT_API=${{ matrix.qt-version }}
          export PYTEST_QT_API=${{ matrix.qt-version }}
      - name: Unset global interpreter lock for free-threaded
        if: ((contains(matrix.os, 'macos') || contains(matrix.os, 'ubuntu')) && contains(matrix.python-version, 't'))
        run: |
          export PYTHON_GIL=0
      - name: Test with pytest
        run: |
          pytest --color=yes test
